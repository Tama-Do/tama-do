{"version":3,"sources":["start.js"],"names":["readPackagerInfoAsync","process","cwd","settings","constructManifestUrlAsync","address","generate","green","qrCode","underline","cyan","printServerInfo","validation","reactNativeVersionWarnings","developerTool","offline","args","require","argv","slice","boolean","options","reset","run"],"mappings":";;;;;;;;;;AAyBA;;wEACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyB,qBAAgBA,qBAAhB,CAAsCC,QAAQC,GAAR,EAAtC,CADzB;;AAAA;AACQC,oBADR;AAAA;AAAA,mBAGwB,cAASC,yBAAT,CAAmCH,QAAQC,GAAR,EAAnC,CAHxB;;AAAA;AAGQG,mBAHR;;AAIE,qCAAGC,QAAH,CAAYD,OAAZ,EAAqB,kBAAU;AAC7B,iCACK,gBAAME,KAAN,CAAY,mBAAZ,CADL,sJAMF,4BAAOC,MAAP,EAAe,CAAf,CANE,sEAUA,gBAAMC,SAAN,CAAgB,gBAAMC,IAAN,CAAWL,OAAX,CAAhB,CAVA,sIAc8C,gBAAMI,SAAN,CAAgB,gBAAMC,IAAN,CAAW,iBAAX,CAAhB,CAd9C;AAmBD,aApBD;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,e;;;;;AAxBf;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,YAAOC,UAAP,CAAkBC,0BAAlB,GAA+C,KAA/C;AACA,YAAOC,aAAP,GAAuB,MAAvB;AACA,YAAOC,OAAP,GAAiB,IAAjB;;AAEA,IAAMC,OAAOC,QAAQ,UAAR,EAAoBhB,QAAQiB,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAApB,EAA2C,EAAEC,SAAS,CAAC,eAAD,CAAX,EAA3C,CAAb;;AAEA,IAAMC,UAAU,EAAhB;AACA,IAAIL,KAAK,aAAL,CAAJ,EAAyB;AACvBK,UAAQC,KAAR,GAAgB,IAAhB;AACA,qBAAI,uCAAJ;AACD;;AAED,mBAASC,GAAT,CAAaZ,eAAb,EAA8BU,OAA9B","file":"start.js","sourcesContent":["// @flow\n\nimport { Config, ProjectSettings, UrlUtils } from 'xdl';\n\nimport chalk from 'chalk';\nimport indent from 'indent-string';\nimport qr from 'qrcode-terminal';\nimport log from '../util/log';\n\nimport packager from '../util/packager';\n\nConfig.validation.reactNativeVersionWarnings = false;\nConfig.developerTool = 'crna';\nConfig.offline = true;\n\nconst args = require('minimist')(process.argv.slice(2), { boolean: ['--reset-cache'] });\n\nconst options = {};\nif (args['reset-cache']) {\n  options.reset = true;\n  log('Asking packager to reset its cache...');\n}\n\npackager.run(printServerInfo, options);\n\n// print a nicely formatted message with setup information\nasync function printServerInfo() {\n  const settings = await ProjectSettings.readPackagerInfoAsync(process.cwd());\n  // who knows why qrcode-terminal takes a callback instead of just returning a string\n  const address = await UrlUtils.constructManifestUrlAsync(process.cwd());\n  qr.generate(address, qrCode => {\n    log(\n      `${chalk.green('Packager started!')}\n\nTo view your app with live reloading, point the Expo app to this QR code.\nYou'll find the QR scanner on the Projects tab of the app.\n\n${indent(qrCode, 2)}\n\nOr enter this address in the Expo app's search bar:\n\n  ${chalk.underline(chalk.cyan(address))}\n\nYour phone will need to be on the same local network as this computer.\n\nFor links to install the Expo app, please visit ${chalk.underline(chalk.cyan('https://expo.io'))}.\n\nLogs from serving your app will appear here. Press Ctrl+C at any time to stop.\n`\n    );\n  });\n}\n"]}