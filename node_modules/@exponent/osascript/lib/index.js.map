{"version":3,"sources":["../src/index.js"],"names":["script","opts","osascriptArgs","Object","assign","stdio","osascriptExecAsync","osascriptSpawnAsync","appName","JSON","stringify","zeroMeansNo","trim","isAppRunningAsync","safeIdOfAppAsync","dir","activate","openFinderToFolderAsync","activateApp","pth","cmd","resolve","openInAppAsync","listOfAppNames","runningAwaitables","appIdAwaitables","push","Promise","all","running","appIds","i","length","chooseAppAsync","preferredEditor","appId","console","warn","editorsToTry","chooseEditorAppAsync","chooseTerminalAppAsync","log","openInEditorAsync","inspect","openItermToSpecificFolderAsync","inTab","openTerminalToSpecificFolderAsync","program","openFolderInTerminalAppAsync","isArray","args","line","module","exports","execAsync","spawnAsync"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Utilities for working with `osascript` which runs AppleScript on Macs\n *\n */\n\nimport execAsync from 'exec-async';\nimport path from 'path';\nimport spawnAsync from '@exponent/spawn-async';\nimport util from 'util';\n\nfunction osascriptArgs(script) {\n  if (!util.isArray(script)) {\n    script = [script];\n  }\n\n  let args = [];\n  for (let line of script) {\n    args.push('-e');\n    args.push(line);\n  }\n\n  return args;\n\n}\n\nasync function osascriptExecAsync(script, opts) {\n  return await execAsync('osascript', osascriptArgs(script), Object.assign({stdio: 'inherit'}, opts));\n}\n\nasync function osascriptSpawnAsync(script, opts) {\n  return await spawnAsync('osascript', osascriptArgs(script), opts);\n}\n\nasync function isAppRunningAsync(appName) {\n  let zeroMeansNo = (await osascriptExecAsync('tell app \"System Events\" to count processes whose name is ' + JSON.stringify(appName))).trim();\n  return (zeroMeansNo !== '0');\n}\n\nasync function safeIdOfAppAsync(appName) {\n  try {\n    return (await osascriptExecAsync('id of app ' + JSON.stringify(appName))).trim();\n  } catch (e) {\n    return null;\n  }\n}\n\nasync function openFinderToFolderAsync(dir, activate = true) {\n  await osascriptSpawnAsync([\n      'tell application \"Finder\"',\n      'open POSIX file ' + JSON.stringify(dir),\n      (activate && 'activate' || ''),\n      'end tell',\n  ]);\n}\n\nasync function activateApp(appName) {\n  return await osascriptSpawnAsync('tell app ' + JSON.stringify(appName) + ' to activate');\n}\n\nasync function openInAppAsync(appName, pth) {\n  let cmd = 'tell app ' + JSON.stringify(appName) + ' to open ' + JSON.stringify(path.resolve(pth));\n  // console.log(\"cmd=\", cmd);\n  return await osascriptSpawnAsync(cmd);\n}\n\nasync function chooseAppAsync(listOfAppNames) {\n  let runningAwaitables = [];\n  let appIdAwaitables = [];\n  for (let appName of listOfAppNames) {\n    runningAwaitables.push(isAppRunningAsync(appName));\n    appIdAwaitables.push(safeIdOfAppAsync(appName));\n  }\n  let running = await Promise.all(runningAwaitables);\n  let appIds = await Promise.all(appIdAwaitables);\n\n  let i;\n  for (i = 0; i < listOfAppNames.length; i++) {\n    if (running[i]) {\n      return listOfAppNames[i];\n    }\n  }\n\n  for (i = 0; i < listOfAppNames.length; i++) {\n    if (!!appIds[i]) {\n      return listOfAppNames[i];\n    }\n  }\n\n  return null;\n\n}\n\nasync function chooseEditorAppAsync(preferredEditor) {\n\n  if (preferredEditor) {\n    // Make sure this editor exists\n    let appId = await safeIdOfAppAsync(preferredEditor);\n    if (appId) {\n      return preferredEditor;\n    } else {\n      console.warn(`Your preferred editor (${preferredEditor}) isn't installed on this computer.`);\n    }\n  }\n\n  let editorsToTry = [\n    'Atom',\n    'Sublime Text',\n    'TextMate',\n    'TextWrangler',\n    'Visual Studio Code',\n    'Brackets',\n    'SubEthaEdit',\n    'BBEdit',\n    'Textastic',\n    'UltraEdit',\n    'MacVim',\n    'CodeRunner 2',\n    'CodeRunner',\n    'TextEdit',\n  ];\n\n  return await chooseAppAsync(editorsToTry);\n}\n\nasync function chooseTerminalAppAsync() {\n  return await chooseAppAsync([\n    'iTerm 3',\n    'iTerm 2',\n    'iTerm',\n    'HyperTerm',\n    // 'Cathode',\n    // 'Terminator',\n    // 'MacTerm',\n    'Terminal',\n  ]);\n}\n\nasync function openInEditorAsync(pth, preferredEditor) {\n  let appName = await chooseEditorAppAsync(preferredEditor);\n  console.log(\"Will open in \" + appName + \" -- \" + pth);\n  return await openInAppAsync(appName, pth);\n}\n\nasync function openItermToSpecificFolderAsync(dir) {\n  return await osascriptSpawnAsync([\n    'tell application \"iTerm\"',\n    'make new terminal',\n    'tell the first terminal',\n    'activate current session',\n    'launch session \"Default Session\"',\n    'tell the last session',\n    'write text \"cd ' + util.inspect(dir) + ' && clear\"',\n    // 'write text \"clear\"',\n    'end tell',\n    'end tell',\n    'end tell',\n  ]);\n  // exec(\"osascript -e 'tell application \\\"iTerm\\\"' -e 'make new terminal' -e 'tell the first terminal' -e 'activate current session' -e 'launch session \\\"Default Session\\\"' -e 'tell the last session' -e 'write text \\\"cd #{value}\\\"' -e 'write text \\\"clear\\\"' -e 'end tell' -e 'end tell' -e 'end tell' > /dev/null 2>&1\")\n\n}\n\nasync function openTerminalToSpecificFolderAsync(dir, inTab = false) {\n\n  if (inTab) {\n    return await osascriptSpawnAsync([\n        'tell application \"terminal\"',\n        'tell application \"System Events\" to tell process \"terminal\" to keystroke \"t\" using command down',\n        'do script with command \"cd ' + util.inspect(dir) + ' && clear\" in selected tab of the front window',\n        'end tell',\n    ]);\n  } else {\n    return await osascriptSpawnAsync([\n        'tell application \"terminal\"',\n        'do script \"cd ' + util.inspect(dir) + ' && clear\"',\n        'end tell',\n        'tell application \"terminal\" to activate',\n    ]);\n  }\n\n}\n\nasync function openFolderInTerminalAppAsync(dir, inTab = false) {\n  let program = await chooseTerminalAppAsync();\n\n  switch (program) {\n    case 'iTerm':\n      return await openItermToSpecificFolderAsync(dir, inTab);\n      break;\n\n    case 'Terminal':\n    default:\n      return await openTerminalToSpecificFolderAsync(dir, inTab);\n      break;\n\n  }\n}\n\n\n\nmodule.exports = {\n  activateApp,\n  chooseAppAsync,\n  chooseEditorAppAsync,\n  chooseTerminalAppAsync,\n  execAsync: osascriptExecAsync,\n  isAppRunningAsync,\n  openFinderToFolderAsync,\n  openFolderInTerminalAppAsync,\n  openInAppAsync,\n  openInEditorAsync,\n  openItermToSpecificFolderAsync,\n  openTerminalToSpecificFolderAsync,\n  safeIdOfAppAsync,\n  spawnAsync: osascriptSpawnAsync,\n\n};\n"]}